DELIMITER //
-- Procedure criada para pegar os valores cadastrados na tabela de usuário e adicionando o evento na tabela LOG   
CREATE PROCEDURE USER_EVENTS (
	IN ID_PARAMETRO INT,
    IN NOMEUSER_PARAMETRO VARCHAR(50),
    IN CPF_PARAMETRO VARCHAR(14),
    IN DTNASC_PARAMETRO DATE,
    IN DTADM_PARAMETRO DATE,
    IN CARGO_PARAMETRO VARCHAR(25),
    IN STATUS_PARAMETRO VARCHAR(1))
BEGIN
	INSERT INTO LOG (NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','IdUsuario','INSERT',ID_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Nome','INSERT',NOMEUSER_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Cpf','INSERT',CPF_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','DtNasc','INSERT',DTNASC_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','DtAdm','INSERT',DTADM_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Cargo','INSERT',CARGO_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Status','INSERT',STATUS_PARAMETRO,NULL);
END;
// DELIMITER ;

DELIMITER //
-- Procedure para pegar alterações na tabela usuario, onde não envolve atualização de status, e criando o evento na tabela LOG
CREATE PROCEDURE UPDATEUSER_EVENTS (
	IN IDUSER_PARAMETRO INT,
    IN IDOLD_PARAMETRO INT,
    IN NOMEUSER_PARAMETRO VARCHAR(50),
    IN NOMEUSEROLD_PARAMETRO VARCHAR(50),
    IN CPF_PARAMETRO VARCHAR(14),
    IN CPFOLD_PARAMETRO VARCHAR(14),
    IN DTNASC_PARAMETRO DATE,
    IN DTNASCOLD_PARAMETRO DATE,
    IN DTADM_PARAMETRO DATE,
    IN DTADMOLD_PARAMETRO DATE,
    IN CARGO_PARAMETRO VARCHAR(25),
    IN CARGOOLD_PARAMETRO VARCHAR(25))
BEGIN
	INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Nome','UPDATE',NOMEUSEROLD_PARAMETRO,NOMEUSER_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Cpf','UPDATE',CPFOLD_PARAMETRO,CPF_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','DtNasc','UPDATE',DTNASCOLD_PARAMETRO,DTNASC_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','DtAdm','UPDATE',DTADMOLD_PARAMETRO,DTADM_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Cargo','UPDATE',CARGOOLD_PARAMETRO,CARGO_PARAMETRO);
END;
// DELIMITER ;

DELIMITER //
-- Procedure para atualizações envolvendo o status do usuário, e adicionando o evento na tabela LOG
CREATE PROCEDURE STATUS_USER_EVENTS (
	IN STATUS_PARAMETRO VARCHAR(1),
    IN STATUSOLD_PARAMETRO VARCHAR(1))
BEGIN
	INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
	VALUES('Usuario','Status','UPDATE',STATUSOLD_PARAMETRO,STATUS_PARAMETRO);
END;
// DELIMITER ;

DELIMITER //
-- Procedure criada para pegar os valores cadastrados na tabela de produtos e adicionando o evento na tabela LOG
CREATE PROCEDURE PROD_EVENTS (
	IN IDPROD_PARAMETRO INT,
    IN NOMEPROD_PARAMETRO VARCHAR(50),
    IN DESCRICAO_PARAMETRO VARCHAR(50),
    IN PERECIVEL_PARAMETRO VARCHAR(1),
    IN SKU_PARAMETRO VARCHAR(10),
    IN STATUS_PARAMETRO VARCHAR(1),
    IN FK_CATEGORIA_IDCATEG_PARAMETRO INT,
    IN FK_USUARIO_IDUSUARIO_PARAMETRO INT,
    IN FK_FORNECEDOR_IDFORNE_PARAMETRO INT,
    IN FK_PROD_EST_IDPRODEST_PARAMETRO INT)
BEGIN
	INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','IdProd',IDPROD_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','Nome',NOMEPROD_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','Descricao',DESCRICAO_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','Perecivel',PERECIVEL_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','SKU',SKU_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','Status',STATUS_PARAMETRO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','fk_Categoria_IdCateg',FK_CATEGORIA_IDCATEG,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','fk_Usuario_IdUsuario',FK_USUARIO_IDUSUARIO,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','fk_Fornecedor_IdForne',FK_FORNECEDOR_IDFORNE,NULL);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','INSERT','fk_Prod_Est_IdProdEst',FK_PROD_EST_IDPRODEST,NULL);
END;
// DELIMITER ;

DELIMITER //
-- Procedure criada para regisitrar as alterações disponíveis na tabela produto, e registrando o evento na tabela LOG
CREATE PROCEDURE UPDATEPROD_EVENTS (
	IN NOMEPROD_PARAMETRO VARCHAR(50),
    IN NOMEPRODOLD_PARAMETRO VARCHAR(50),
    IN DESCRICAO_PARAMETRO VARCHAR(50),
    IN DESCRICAOOLD_PARAMETRO VARCHAR(50),
    IN PERECIVEL_PARAMETRO VARCHAR(1),
    IN PERECIVELOLD_PARAMETRO VARCHAR(1),
    IN SKU_PARAMETRO VARCHAR(10),
    IN SKUOLD_PARAMETRO VARCHAR(10),
    IN FK_CATEGORIA_IDCATEG_PARAMETRO INT,
    IN FK_CATEGORIA_IDCATEGOLD_PARAMETRO INT,
    IN FK_USUARIO_IDUSUARIO_PARAMETRO INT,
    IN FK_USUARIO_IDUSUARIOOLD_PARAMETRO INT,
    IN FK_FORNECEDOR_IDFORNE_PARAMETRO INT,
    IN FK_FORNECEDOR_IDFORNEOLD_PARAMETRO INT,
    IN FK_PROD_EST_IDPRODEST_PARAMETRO INT,
    IN FK_PROD_EST_IDPRODESTOLD_PARAMETRO INT)
BEGIN
	INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','Nome',NOMEPRODOLD_PARAMETRO,NOMEPROD_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','Descricao',DESCRICAOOLD_PARAMETRO,DESCRICAO_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','Perecivel',PERECIVELOLD_PARAMETRO,PERECIVEL_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','SKU',SKUOLD_PARAMETRO,SKU_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','fk_Categoria_IdCateg',FK_CATEGORIA_IDCATEGOLD_PARAMETRO,FK_CATEGORIA_IDCATEG_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','fk_Usuario_IdUsuario',FK_USUARIO_IDUSUARIOOLD_PARAMETRO,FK_USUARIO_IDUSUARIO_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','fk_Fornecedor_IdForne',FK_FORNECEDOR_IDFORNEOLD_PARAMETRO,FK_FORNECEDOR_IDFORNE_PARAMETRO);
    INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','fk_Prod_Est_IdProdEst',FK_PROD_EST_IDPRODESTOLD_PARAMETRO,FK_PROD_EST_IDPRODEST_PARAMETRO);
END;
// DELIMITER ;

DELIMITER //
-- Procedura para atualização do status do produto, e atualizando o evento na tabela LOG
CREATE PROCEDURE STATUS_PROD_EVENTS (
	IN STATUS_PARAMETRO VARCHAR(1),
    IN STATUSOLD_PARAMETRO VARCHAR(1))
BEGIN
	INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Produto','UPDATE','Status',STATUSOLD_PARAMETRO,STATUS_PARAMETRO);
END;
// DELIMITER ;

DELIMITER //
-- Procedura para atualização do status do armazem, e atualizando o evento na tabela LOG
CREATE PROCEDURE STATUS_ARMAZEM_EVENTS (
	IN STATUS_PARAMETRO VARCHAR(1),
    IN STATUSOLD_PARAMETRO VARCHAR(1))
BEGIN
	INSERT INTO LOG (ID, NOME_TABELA, COLUNA, OPERACAO, VALOR_ATUAL, VALOR_NOVO)
    VALUES('Armazem','UPDATE','Status',STATUSOLD_PARAMETRO,STATUS_PARAMETRO);
END;
// DELIMITER ;
